{"version":3,"sources":["Home.js","App.js","serviceWorker.js","index.js"],"names":["Structure","prop","className","avatar","src","quote","author","onClick","navigator","clipboard","writeText","toast","success","Home","dateChecker","c","date1","Date","createdAt","getTime","todele","id","_id","axios","post","owner","datefilter","k","filer","ev","setState","checkerImg","target","files","size","err","img","window","URL","createObjectURL","checkerImage","checker","value","quotation","add","preventDefault","data","FormData","state","append","name","onUploadProgress","ProgressEvent","loaded","total","then","res","modal","location","reload","prev","unshift","slice","catch","error","warning","toggler","isOpen","hi","response","map","filter","info","reverse","Navbar","color","dark","expand","Container","NavbarBrand","href","NavbarToggler","this","Collapse","navbar","Nav","NavItem","NavLink","Spinner","Button","Modal","toggle","fade","ModalHeader","ModalBody","type","accept","onChange","placeholder","Progress","max","Math","round","ModalFooter","Component","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.c555182e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport './App.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Spinner } from 'reactstrap';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Container,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Progress\r\n} from 'reactstrap'\r\n\r\nimport axios from 'axios';\r\n\r\nfunction Structure(prop) {\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        {prop.avatar && <img className=\"img\" src={prop.avatar} />}\r\n        <p>\"{prop.quote}\"</p>\r\n        <quote>~{prop.author}</quote>\r\n        <div>\r\n          <a onClick={() => { navigator.clipboard.writeText(`\"${prop.quote}.\" ~${prop.author}`); toast.success('Quote Copied') }} className=\"btn btn-success card-btn\">Copy</a>\r\n        </div>\r\n      </div>\r\n      <br />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      quote: null,\r\n      isOpen: false,\r\n      modal: false,\r\n      img: null,\r\n      src: null,\r\n      checkerImage: null,\r\n      loaded: 0,\r\n      author: '',\r\n      quotation: ''\r\n    }\r\n  }\r\n\r\n  // dateChecker\r\n  dateChecker = (c) => {\r\n\r\n    var date1 = new Date(c.createdAt);\r\n    var date2 = new Date();\r\n\r\n    var difference_In_Time = date2.getTime() - date1.getTime();\r\n\r\n    var difference_In_Days = difference_In_Time / (1000 * 3600 * 24)\r\n\r\n    if (difference_In_Days >= 10) {\r\n      let todele = { id: c._id}\r\n      axios.post('/quotes/delete', todele)\r\n      return c = { owner: \"delete\" }\r\n\r\n    }\r\n    else {\r\n      return c\r\n    }\r\n  }\r\n\r\n  datefilter = (k) => {\r\n    return k.owner !== \"delete\"\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.post('/quotes', { hi: \"john\" })\r\n      .then((res) => res.data.response.map(this.dateChecker))\r\n      .then((data) => data.filter(this.datefilter))\r\n      .then((info) => this.setState({\r\n        quote: info.reverse()\r\n      }))\r\n  }\r\n  filer = (ev) => {\r\n    //console.log(ev.target)\r\n    this.setState({\r\n      checkerImg: \"loading\"\r\n    })\r\n    // toast.info(\"Loading,please wait for preview before clicking 'Update' button...\")\r\n    let file = ev.target.files[0]\r\n    if (file.size > 5000 * 5000 * 5) {\r\n      this.setState({ err: \"Image Size Too Large\" })\r\n    } else {\r\n      this.setState({\r\n        img: ev.target.files[0],\r\n        src: window.URL.createObjectURL(ev.target.files[0]),\r\n        checkerImage: true\r\n      })\r\n      this.setState({ checker: true })\r\n\r\n    }\r\n  }\r\n  author = (ev) => {\r\n    let author = ev.target.value;\r\n    this.setState({ author: author });\r\n  }\r\n  quote = (ev) => {\r\n    let quote = ev.target.value;\r\n    this.setState({ quotation: quote });\r\n  }\r\n  add = (ev) => {\r\n    ev.preventDefault();\r\n    toast.success('Loading,  please wait');\r\n    let data = new FormData()\r\n    if (this.state.img) {\r\n      data.append('authorImage', this.state.img)\r\n      data.append('filename', this.state.img.name)\r\n    }\r\n    data.append('quote', this.state.quotation)\r\n    data.append('author', this.state.author)\r\n    if (this.state.quotation == \"\" || this.state.author == \"\") {\r\n      toast.warning(\"Please Add an author and a quote!\")\r\n      return\r\n    }\r\n    else {\r\n      axios.post('/quotes/add', data, {\r\n        onUploadProgress: ProgressEvent => {\r\n          this.setState({\r\n            loaded: (ProgressEvent.loaded / ProgressEvent.total * 100),\r\n          })\r\n        }\r\n      })\r\n        .then((res) => {\r\n          this.modal()\r\n          window.location.reload()\r\n        })\r\n        .then(() => {\r\n          this.setState((prev) => {\r\n            prev.quote.unshift({\r\n              author: this.state.author,\r\n              quote: this.state.quotation,\r\n              avatar: this.state.src\r\n            })\r\n\r\n            return {\r\n              quote: prev.quote.slice(1, 1000)\r\n            }\r\n          })\r\n        })\r\n        .then(() => {\r\n          this.setState({\r\n            loaded: 0,\r\n            quotation: null,\r\n            author: null,\r\n            src: null,\r\n            img: null\r\n          })\r\n        })\r\n        .catch(err => {\r\n          toast.error('Failed to add Quote. Try again..')\r\n        })\r\n    }\r\n  }\r\n\r\n  toggler = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    })\r\n  }\r\n  modal = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n          <Container>\r\n            <NavbarBrand href=\"/\">Quote Blog &copy; 2021 </NavbarBrand>\r\n            <NavbarToggler onClick={this.toggler} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className='ml-auto' navbar>\r\n                <NavItem>\r\n                  <NavLink href=\"https://github.com/johnalalade\">Github</NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n        {/* modal */}\r\n        <Container className=\"col-md-6\">\r\n          {this.state.quote === null && <div className=\"spin\">  <Spinner color=\"primary\" className=\"spinner\" size=\"lg\" /> </div> ||\r\n            <div>\r\n              <p>Quotes will be deleted after 10 days</p>\r\n              <Button color=\"danger\" onClick={this.modal}>Add Quote</Button>\r\n              <Modal isOpen={this.state.modal} toggle={this.modal} fade={false}>\r\n                <ModalHeader toggle={this.modal}>Add Quote</ModalHeader>\r\n                <ModalBody>\r\n                  <h6>Author's Image:</h6>\r\n                  <input type=\"file\" accept=\"image/*\" className=\"form-control\" onChange={this.filer} />\r\n                  <br />\r\n                  {this.state.src && <img className=\"img\" src={this.state.src} />}\r\n                  <br />\r\n                  <h6>Author's Name:</h6>\r\n                  <input type=\"name\" placeholder=\"Enter author's Name\" className=\"form-control\" onChange={this.author} />\r\n                  <br />\r\n                  <h6>Quote:</h6>\r\n                  <textarea placeholder=\"Enter Quote\" className=\"form-control\" onChange={this.quote}></textarea>\r\n\r\n                  {this.state.loaded != 0 &&\r\n                    <Progress max=\"100\" color=\"success\" value={this.state.loaded}>{Math.round(this.state.loaded, 2)}%</Progress>\r\n                  }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                  <Button color=\"primary\" onClick={this.add}>Add Quote</Button>{' '}\r\n                  <Button color=\"secondary\" onClick={this.modal}>Cancel</Button>\r\n                </ModalFooter>\r\n\r\n              </Modal>\r\n\r\n              <br />\r\n              <br />\r\n              {\r\n                this.state.quote && this.state.quote.map((quote) =>\r\n                  <Structure avatar={quote.avatar} quote={quote.quote} author={quote.author} />\r\n                )\r\n              }\r\n            </div>}\r\n        </Container>\r\n        <ToastContainer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;\r\n\r\n// [{\r\n//   author: 'John',\r\n//   quote: 'You are not chosen because you are holy, You are Holy because you are Chosen'\r\n// }],","import React from 'react';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport Home from './Home'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n          <Switch>\n            <Route exact path='/' component={Home}/>\n\n          </Switch>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}